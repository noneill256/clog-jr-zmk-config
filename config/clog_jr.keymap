/*
* Copyright (c) 2022 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NUM 1
#define SYM 2
#define SYS 3
#define NAV 4

/ {
    behaviors {
    
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SPACE>, <&kp ENTER>;
        };
    };
    
    macros {
        back_macro: back_macro {
            label = "back_macro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LALT>
                ;
            };
    };

    combos {
        compatible = "zmk,combos";
        combo_ltab {
            timeout-ms = <80>;
            key-positions = <0 1>;
            bindings = <&kp TAB>;
        };

        combo_lshift {
            timeout-ms = <80>;
            key-positions = <9 10>;
            bindings = <&kp LSHFT>;
        };

        combo_lcmd {
            timeout-ms = <80>;
            key-positions = <18 19>;
            bindings = <&kp LCMD>;
        };
        
        combo_lsys {
            timeout-ms = <80>;
            key-positions = <20 21>;
            bindings = <&mo 3>;
        };
        
        combo_lnum {
            timeout-ms = <80>;
            key-positions = <1 2>;
            bindings = <&mo 1>;
        };
        
        combo_lsym {
            timeout-ms = <80>;
            key-positions = <11 12>;
            bindings = <&mo 2>;
        };

        combo_ralt {
            timeout-ms = <80>;
            key-positions = <6 7>;
            bindings = <&kp RALT>;
        };

        combo_rshift {
            timeout-ms = <80>;
            key-positions = <15 16>;
            bindings = <&kp RSHFT>;
        };

        combo_rcmd {
            timeout-ms = <80>;
            key-positions = <24 25>;
            bindings = <&kp RCMD>;
        };

        combo_rsys {
            timeout-ms = <80>;
            key-positions = <23 24>;
            bindings = <&mo 3>;
        };
        
        combo_rnum {
            timeout-ms = <80>;
            key-positions = <5 6>;
            bindings = <&mo 1>;
        };
        
        combo_rsym {
            timeout-ms = <80>;
            key-positions = <14 15>;
            bindings = <&mo 2>;
        };

        combo_capslock {
            timeout-ms = <80>;
            key-positions = <8 9>;
            bindings = <&kp CAPS>;
        };
        
        combo_back {
            timeout-ms = <100>;
            key-positions = <18 19 27>;
            bindings = <&back_macro>;
        };
        
        combo_nav {
            timeout-ms = <80>;
            key-positions = <14 15 16>;
            bindings = <&tog 4>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        
        NUM {
            bindings = <
         /*                1         2           3       -                  F1       F2          F3          F4  */
                       &kp N1     &kp N2     &kp N3    &kp KP_MINUS     &kp F1     &kp F2     &kp F3     &kp F4
         /*    =        4           5           6        +                  F5      F6          F7          F8       /  */
          &kp KP_EQUAL &kp N4     &kp N5     &kp N6    &kp KP_PLUS      &kp F5     &kp F6     &kp F7     &kp F8     &kp FSLH
         /*             7           8           9        .                  F9      F10         F11         F12   */
                       &kp N7    &kp N8     &kp N9     &kp KP_DOT       &kp F9      &kp F10    &kp F11    &kp F12
                                                    /*   0                  *    */
                                                       &kp N0           &kp ASTERISK   
            >;
        };

        SYM { 
            bindings = <
           /*             [          {           (         *               ~         )           }        ]  */
                       &kp LBKT   &kp LBRC   &kp LPAR   &kp ASTRK      &kp TILDE &kp RPAR    &kp RBRC  &kp RBKT
           /*    |       @           #           $        "               '          .           ,      /       `  */
             &kp PIPE  &kp AT     &kp HASH   &kp DLLR   &kp DQT        &kp SQT   &kp DOT     &kp COMMA &kp FSLH  &kp GRAVE
           /*            %           ^           &          <            >           -           =        \      */  
                       &kp PRCNT  &kp CARET  &kp AMPS   &kp LT          &kp GT   &kp KP_MINUS &kp EQUAL &kp BSLH
                       /*                                 !                ?             */
                                                       &kp EXCL         &kp QMARK   
            >;
        };

        SYS {
            bindings = <
                     &kp C_VOL_UP    &kp C_MUTE         &kp C_VOL_UP     &reset             &kp DEL       &kp HOME   &kp UP    &kp PG_UP  
            &trans   &kp C_PREV      &kp C_PLAY_PAUSE   &kp C_NEXT       &kp ESC            &kp C_AL_CALC &kp LEFT   &kp DOWN  &kp RIGHT   &kp PRINTSCREEN
                     &kp C_BRI_DN    &trans             &kp C_BRI_UP     &trans             &bt BT_NXT    &kp END    &trans    &kp PG_DN  
                                                       &trans                                    &trans
            >;
        };
        
        NAV {
            bindings = <
                /*  0       1       2        3            4         5         6         7       */
                  &trans  &trans  &trans   &trans       &trans   &trans     &kp UP     &trans
          /* 8      9       10       11      12           13        14         15         16         17 */
          &trans  &trans  &trans   &trans  &trans       &trans   &kp LEFT   &kp DOWN   &kp RIGHT   &trans
              /*    18      19      20      21            22       23        24        25  */
                  &trans  &trans  &trans   &trans       &trans  &trans      &trans     &trans
                          /*              26                  27      */
                                        &kp BSPC             &td0
            >;
        };
